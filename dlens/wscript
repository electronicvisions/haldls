#!/usr/bin/env python

from os.path import join
from waflib.extras.gtest import summary
from waflib.extras.symwaf2ic import get_toplevel_path


def options(opt):
    opt.load('pytest')
    opt.load('pylint')
    opt.load('pycodestyle')


def configure(cfg):
    cfg.load('python')
    cfg.check_python_version()
    cfg.check_python_headers()
    cfg.load('pytest')
    cfg.load('pylint')
    cfg.load('pycodestyle')


def build(bld):
    for hx_version in [1, 2]:
        bld(name=f'dlens_vx_v{hx_version}',
            features='py pylint pycodestyle',
            source = bld.path.ant_glob(f'dlens_vx_v{hx_version}/**/*.py'),
            relative_trick=True,
            use = [f'pyhaldls_vx_v{hx_version}',
                   f'pystadls_vx_v{hx_version}',
                   f'pylola_vx_v{hx_version}',
                   f'pyhalco_hicann_dls_vx_v{hx_version}',
                   'pyhxcomm_vx',
                   'pylogging'
            ],
            install_path = '${PREFIX}/lib',
            pylint_config=join(get_toplevel_path(), "code-format", "pylintrc"),
            pycodestyle_config=join(get_toplevel_path(), "code-format", "pycodestyle"),
            test_timeout=120
        )

        bld(name=f'dlens_swtest_vx_v{hx_version}',
            tests=f'tests/dlens_swtest_vx_v{hx_version}.py',
            features='use pytest pylint pycodestyle',
            use=[f'dlens_vx_v{hx_version}'],
            install_path='${PREFIX}/bin',
            pylint_config=join(get_toplevel_path(), "code-format", "pylintrc"),
            pycodestyle_config=join(get_toplevel_path(), "code-format", "pycodestyle"),
            test_timeout=120
        )

        bld(name=f'dlens_hwtest_vx_v{hx_version}',
            tests=f'tests/dlens_hwtest_vx_v{hx_version}.py',
            features='use pytest pylint pycodestyle',
            use=[f'dlens_vx_v{hx_version}'],
            install_path='${PREFIX}/bin',
            pylint_config=join(get_toplevel_path(), "code-format", "pylintrc"),
            pycodestyle_config=join(get_toplevel_path(), "code-format", "pycodestyle"),
            skip_run=not bld.env.DLSvx_HARDWARE_AVAILABLE,
            test_timeout=120
        )

        bld(name=f'dlens_health_check_vx_v{hx_version}',
            tests=f'tests/dlens_health_check_vx_v{hx_version}.py',
            features='use pytest pylint pycodestyle',
            use=[f'dlens_vx_v{hx_version}'],
            install_path='${PREFIX}/bin',
            pylint_config=join(get_toplevel_path(), "code-format", "pylintrc"),
            pycodestyle_config=join(get_toplevel_path(), "code-format", "pycodestyle"),
            skip_run=not bld.env.DLSvx_HARDWARE_AVAILABLE,
            test_timeout=30
        )

        # --- Deprecated alias --- #
        bld(name=f'run_ppu_program_vx_v{hx_version}_py',
            features='use',
            use=[f'dlens_vx_v{hx_version}'],
            )

    bld.add_post_fun(summary)
