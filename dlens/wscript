#!/usr/bin/env python

from os.path import join
from waflib.extras.gtest import summary
from waflib.extras.symwaf2ic import get_toplevel_path


def depends(ctx):
    ctx('haldls', 'pyhaldls')
    ctx('haldls', 'pystadls')
    ctx('halco', 'pyhalco')
    ctx('hxcomm', 'pyhxcomm')
    ctx('code-format')


def options(opt):
    opt.load('pytest')
    opt.load('pylint')
    opt.load('pycodestyle')


def configure(cfg):
    cfg.load('python')
    cfg.check_python_version()
    cfg.check_python_headers()
    cfg.load('pytest')
    cfg.load('pylint')
    cfg.load('pycodestyle')


def build(bld):
    bld(name='dlens_vx',
        features='py pylint pycodestyle',
        source = bld.path.ant_glob('dlens_vx/**/*.py'),
        relative_trick=True,
        use = ['pyhaldls_vx',
               'pystadls_vx',
               'pylola_vx',
               'pyhalco_hicann_dls_vx',
               'pyhxcomm_vx'
        ],
        install_path = '${PREFIX}/lib',
        pylint_config=join(get_toplevel_path(), "code-format", "pylintrc"),
        pycodestyle_config=join(get_toplevel_path(), "code-format", "pycodestyle"),
        test_timeout=120
    )

    bld(name='dlens_swtest_vx',
        tests='tests/dlens_swtest_vx.py',
        features='use pytest pylint pycodestyle',
        use=['dlens_vx'],
        install_path='${PREFIX}/bin',
        pylint_config=join(get_toplevel_path(), "code-format", "pylintrc"),
        pycodestyle_config=join(get_toplevel_path(), "code-format", "pycodestyle"),
        test_timeout=120
    )

    bld(name='dlens_hwtest_vx',
        tests='tests/dlens_hwtest_vx.py',
        features='use pytest pylint pycodestyle',
        use=['dlens_vx'],
        install_path='${PREFIX}/bin',
        pylint_config=join(get_toplevel_path(), "code-format", "pylintrc"),
        pycodestyle_config=join(get_toplevel_path(), "code-format", "pycodestyle"),
        skip_run=not bld.env.DLSvx_HARDWARE_AVAILABLE,
        test_timeout=120
    )

    bld(name='dlens_health_check_vx',
        tests='tests/dlens_health_check_vx.py',
        features='use pytest pylint pycodestyle',
        use=['dlens_vx'],
        install_path='${PREFIX}/bin',
        pylint_config=join(get_toplevel_path(), "code-format", "pylintrc"),
        pycodestyle_config=join(get_toplevel_path(), "code-format", "pycodestyle"),
        skip_run=not bld.env.DLSvx_HARDWARE_AVAILABLE,
        test_timeout=30
    )

    # --- Deprecated aliases --- #
    bld(name='run_ppu_program_vx_py',
        features='use',
        use=['dlens_vx'],
        )

    bld.add_post_fun(summary)
