@Library("jenlib") _
import org.jenkinsci.plugins.pipeline.modeldefinition.Utils

Map<String, Object> pipelineOptions = [
		projects           : ["haldls"],
		testOptions        : "--test-execall -j1",
		testSlurmResource  : [[partition: "cube", wafer: 62, "fpga-without-aout": 3]],
		preTestHook: { configureHxCubeBitfile() },
		testTimeout        : 240,
		notificationChannel: "#dls-software"
]

wafDefaultPipeline([container: [app: "dls-core"]] << pipelineOptions)

try {
	stage("Module Deployment") {
		if (env.GERRIT_EVENT_TYPE == "change-merged") {
			// Build in 'dls' app for deployment

			runOnSlave(label: "frontend") {
				cleanWs()
			}

			wafDefaultPipeline([container: [app: "dls"]] << pipelineOptions)

			if (currentBuild.currentResult == "SUCCESS") {
				runOnSlave(label: "frontend") {
					inSingularity(app: "dls") {
						deployModule([name: "haldls", source: "bin/ lib/ doc/ repos_log.txt"])
					}
				}
			} else {
				echo("Deployment skipped: Unstable build.")
				Utils.markStageSkippedForConditional(STAGE_NAME)
			}
		} else {
			echo("Deployment skipped: Not a merge event.")
			Utils.markStageSkippedForConditional(STAGE_NAME)
		}
	}
} catch (Throwable t) {
	notifyFailure(mattermostChannel: "#dls-software")
	throw t
}

if (currentBuild.currentResult != "SUCCESS") {
	notifyFailure(mattermostChannel: "#dls-software")
}
