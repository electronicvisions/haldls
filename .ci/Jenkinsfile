@Library("jenlib") _

try {

	Map<String, Object> commonPipelineOptions = [
		projects           : ["haldls"],
		testTimeout        : 240,
		notificationChannel: "#dls-software"
	]

	Map<String, Object> pipelineDeploymentOptions = [
		container          : [app: "dls"]
	] << commonPipelineOptions

	// Additional options for hardware testing in "no deployment" case
	Map<String, Object> pipelineNoDeploymentOptions = [
		container          : [app: "dls-core"],
		testOptions        : "--test-execall -j1",
		testSlurmResource  : [[partition: "cube", wafer: 62, "fpga-without-aout": 3]],
		preTestHook        : { configureHxCubeBitfile() },
	] << commonPipelineOptions

	boolean deploy = env.GERRIT_EVENT_TYPE == "change-merged"

	Map<String, Object> pipelineOptions = deploy ? pipelineDeploymentOptions : pipelineNoDeploymentOptions

	wafDefaultPipeline(pipelineOptions)

	conditionalStage(name: "Module Deployment", skip: !deploy) {
		runOnSlave(label: "frontend") {
			inSingularity(app: "dls") {
				deployModule([name: "haldls", source: "bin/ lib/ doc/ repos_log.txt"])
			}
		}
	}
} catch (Throwable t) {
	notifyFailure(mattermostChannel: "#dls-software")
	throw t
}

if (currentBuild.currentResult != "SUCCESS") {
	notifyFailure(mattermostChannel: "#dls-software")
}
