#!/usr/bin/env python

import os
from os.path import join
from waflib.extras.gtest import summary
from waflib.extras.symwaf2ic import get_toplevel_path

def options(opt):
    opt.load('pytest')
    opt.load('pylint')
    opt.load('pycodestyle')

def configure(cfg):
    cfg.load('compiler_cxx')
    cfg.load('python')
    cfg.check_python_version()
    cfg.check_python_headers()
    cfg.load('pytest')
    cfg.load('genpybind')
    cfg.load('pylint')
    cfg.load('pycodestyle')

def build(bld):
    bld.env.DLSvx_HARDWARE_AVAILABLE = "SLURM_HWDB_YAML" in os.environ

    if not bld.env.with_pybind:
        bld.fatal('building pyhaldls requires pybind')

    for hx_version in [3, 4]:
        bld(
            features='cxx pyext',
            target=f'pyhaldls_vx_v{hx_version}_obj',
            source=f'../src/haldls/vx/v{hx_version}/pyhaldls.cpp',
            use=f'haldls_vx_v{hx_version}',
            defines=['__GENPYBIND_GENERATED__'],
        )

        bld(
            target=f'pyhaldls_vx_v{hx_version}',
            source=f'../include/haldls/vx/v{hx_version}/pyhaldls.h',
            genpybind_tags=['haldls_vx', f'haldls_vx_v{hx_version}'],
            features='genpybind cxx cxxshlib pyext apply_semaphore',
            use=[f'haldls_vx_v{hx_version}', f'haldls_vx_v{hx_version}_serialization',
                 f'pyfisch_vx_v{hx_version}', f'pyhaldls_vx_v{hx_version}_obj',
                 f'pyhalco_hicann_dls_vx_v{hx_version}'],
            # Avoid warning; 1 OoM less and I see warnings (ECM)
            cxxflags='--param=max-vartrack-size=100000000',
            semaphore=bld.env['stadls_semaphore'],
        )

        bld(
            name=f'pyhaldls_test_vx_v{hx_version}',
            tests=f'test/pyhaldls_test_vx_v{hx_version}.py',
            features='use pytest pylint pycodestyle',
            use=[f'pyhalco_hicann_dls_vx_v{hx_version}', f'pyhaldls_vx_v{hx_version}', 'pyhalco_common_files'],
            install_path='${PREFIX}/bin',
            pylint_config=join(get_toplevel_path(), "code-format", "pylintrc"),
            pycodestyle_config=join(get_toplevel_path(), "code-format", "pycodestyle"),
            test_timeout=120
        )

    bld.add_post_fun(summary)
