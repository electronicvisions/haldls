#!/usr/bin/env python

from os.path import join
from waflib.extras.gtest import summary
from waflib.extras.symwaf2ic import get_toplevel_path


def options(opt):
    opt.load('pytest')
    opt.load('pylint')
    opt.load('pycodestyle')


def configure(cfg):
    cfg.load('compiler_cxx')
    cfg.load('python')
    cfg.check_python_version()
    cfg.check_python_headers()
    cfg.load('pytest')
    cfg.load('genpybind')
    cfg.load('pylint')
    cfg.load('pycodestyle')


def build(bld):
    if not bld.env.with_pybind:
        bld.fatal('building pylola requires pybind')

    for hx_version in [3, 4]:
        bld(
            features='cxx pyext',
            target=f'pylola_vx_v{hx_version}_obj',
            source=f'../src/lola/vx/v{hx_version}/pylola.cpp',
            use=f'lola_vx_v{hx_version}',
            defines=['__GENPYBIND_GENERATED__'],
        )

        bld(
            target=f'pylola_vx_v{hx_version}',
            source=f'../include/lola/vx/v{hx_version}/pylola.h',
            genpybind_tags=['lola_vx', f'lola_vx_v{hx_version}'],
            features='genpybind cxx cxxshlib pyext apply_semaphore',
            use=[f'lola_vx_v{hx_version}', f'lola_vx_v{hx_version}_serialization',
                 'pyhalco_common_files', f'pyhalco_hicann_dls_vx_v{hx_version}',
                 f'pyhaldls_vx_v{hx_version}', f'pylola_vx_v{hx_version}_obj'],
            semaphore=bld.env['stadls_semaphore'],
        )

        bld(
            name=f'pylola_test_vx_v{hx_version}',
            tests=bld.path.ant_glob(f'test/*_vx_v{hx_version}.py'),
            features='use pytest pylint pycodestyle',
            use=[f'pylola_vx_v{hx_version}'],
            install_path='${PREFIX}/bin',
            pylint_config=join(get_toplevel_path(), "code-format", "pylintrc"),
            pycodestyle_config=join(get_toplevel_path(), "code-format", "pycodestyle"),
            test_environ=dict(TEST_PPU_PROGRAM=join(get_toplevel_path(), 'haldls', 'tests', 'sw', 'lola', 'lola_ppu_test_elf_file.bin')),
            test_timeout=120
        )

    bld.add_post_fun(summary)
